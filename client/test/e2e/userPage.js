import faker from 'faker';
import url from '../helper/constant';

const title = `${faker.lorem.words().substr(0, 10)}...`;
const firstName1 = 'Info';
const firstName2 = 'InfoEdit';

module.exports = {
  'User Page:': (browser) => {
    browser
     .url(url.signin)
     .waitForElementVisible('body')
     .assert.containsText('h3', 'Signin Here:')
     .setValue('input[type=email]', 'info@okdocs.com')
     .setValue('input[type=password]', 'asdfghjk')
     .click('input[type=submit]')
     .waitForElementVisible('a[id=logout]')
     .assert.urlContains('dashboard')
     .assert.elementPresent('#pushpin')
     .click('i[id="newdocument"]')
     .waitForElementVisible('button[id=save]')
     .setValue('input[id="documentTitle"]', `${title}`)
     .execute('document.getElementById("access").value="public"')
     .pause(2000)
     .execute('CKEDITOR.instances.editor.setData("My Content")')
     .pause(2000)
     .click('#save')
     .click('#exit')
     .assert.urlContains('dashboard')
     .click('#pushpin')
     .click('#alldocuments')
     .waitForElementVisible('input[id=offset]')
     .assert.urlContains('all-documents')
     .assert.elementPresent('input[id="limit"]')
     .assert.elementPresent('input[id="offset"]')
     .assert.containsText('em', title)
     .click('#pushpin')
     .click('#search-link')
     .waitForElementVisible('button[id=searchButton]')
     .assert.urlContains('search')
     .assert.elementPresent('input[id="limit"]')
     .assert.elementPresent('input[id="offset"]')
     .assert.elementPresent('input[id="search"]')
     .setValue('input[id="search"]', `${title}`)
     .click('#searchButton')
     .waitForElementVisible('em')
     .assert.containsText('em', title)
     .click('#pushpin')
     .click('#allusers')
     .waitForElementVisible('input[id=offset]')
     .assert.urlContains('all-users')
     .assert.elementPresent('input[id="limit"]')
     .assert.elementPresent('input[id="offset"]')
     .assert.containsText('b', 'First Name:')
     .assert.containsText('strong', 'All Users')
     .click('#pushpin')
     .click('#editprofile')
     .waitForElementVisible('input[id=firstName]')
     .assert.urlContains('edit-profile')
     .assert.elementPresent('input[id="firstName"]')
     .assert.elementPresent('input[id="password"]')
     .clearValue('input[id="firstName"]')
     .setValue('input[id=oldPassword]', 'asdfghjk')
     .setValue('input[id="firstName"]', firstName2)
     .click('input[type=submit]')
     .click('a[id=dashboard]')
     .click('#editprofile')
     .assert.value('input[id="firstName"]', firstName2)
     .clearValue('input[id="firstName"]')
     .setValue('input[id="firstName"]', firstName1)
     .setValue('input[id=oldPassword]', 'asdfghjk')
     .click('input[type=submit]')
     .click('a[id=dashboard]')
     .click('#editprofile')
     .assert.value('input[id="firstName"]', firstName1)
     .waitForElementNotPresent('.toast')
     .click('a[id=dashboard]')
     .waitForElementVisible('#mydocuments')
     .click('#mydocuments')
     .waitForElementPresent('ul[id="mydocs"]')
     .assert.containsText('em', title)
     .click('a[id=logout]')
     .waitForElementVisible('header')
     .pause(5000)
     .assert.urlEquals('http://localhost:8080/?#/')
     .end();
  }
};
